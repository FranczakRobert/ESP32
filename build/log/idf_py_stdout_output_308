[1/9] Performing build step for 'bootloader'
[1/1] cd /Users/robertfranczak/Code/ESP32/ESP/build/bootloader/esp-idf/esptool_py && /Users/robertfranczak/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/robertfranczak/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/robertfranczak/Code/ESP32/ESP/build/bootloader/bootloader.bin
Bootloader binary size 0x66c0 bytes. 0x940 bytes (8%) free.
[2/7] Building CXX object esp-idf/utils/CMakeFiles/__idf_utils.dir/Thread.cpp.obj
[3/7] Linking C static library esp-idf/utils/libutils.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable ESP.elf
[6/7] Generating binary image from built executable
esptool.py v4.3
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/robertfranczak/Code/ESP32/ESP/build/ESP.bin
[7/7] cd /Users/robertfranczak/Code/ESP32/ESP/build/esp-idf/esptool_py && /Users/robertfranczak/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/robertfranczak/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/robertfranczak/Code/ESP32/ESP/build/partition_table/partition-table.bin /Users/robertfranczak/Code/ESP32/ESP/build/ESP.bin
ESP.bin binary size 0x2bb20 bytes. Smallest app partition is 0x100000 bytes. 0xd44e0 bytes (83%) free.
